<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1</TargetFrameworks>
    
    <!-- NuGet Package Configuration -->
    <PackageId>SmartRAG</PackageId>
    <PackageVersion>2.2.0</PackageVersion>
    <Authors>Barış Yerlikaya</Authors>
    <Company>Barış Yerlikaya</Company>
    <Product>SmartRAG</Product>
    <Description>High-performance RAG (Retrieval-Augmented Generation) library for .NET Standard 2.0/2.1 that enables AI-powered document question-answering with automatic conversation history management, multiple provider support and enterprise-grade vector storage. Features intelligent session management, persistent conversation context, and platform-agnostic design. Compatible with .NET Framework 4.6.1+, .NET Core 2.0+, and .NET 5+ applications.</Description>
    <PackageTags>rag retrieval-augmented-generation ai llm document-qa vector-database openai anthropic gemini azure-openai qdrant redis sqlite conversation-history session-management chat-context</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <!-- <PackageIcon>icon.png</PackageIcon> -->
    <PackageProjectUrl>https://byerlikaya.github.io/SmartRAG/en/</PackageProjectUrl>
    <RepositoryUrl>https://github.com/byerlikaya/SmartRAG.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageReleaseNotes>Release 2.2.0: Revolutionary OCR-Powered Document Intelligence

🖼️ **BREAKTHROUGH OCR CAPABILITIES - THE GAME CHANGER:**
• **Advanced OCR Engine**: Tesseract 5.2.0 with SkiaSharp 3.119.0 integration for enterprise-grade image processing
• **Multi-Format Image Support**: JPG, JPEG, PNG, GIF, BMP, TIFF, WEBP with automatic format detection
• **WebP to PNG Conversion**: Seamless WebP image processing using SkiaSharp for Tesseract compatibility
• **Multi-Language OCR**: Support for English (eng), Turkish (tur), and extensible language framework
• **Confidence Scoring**: Detailed OCR confidence metrics with processing time tracking
• **Table Extraction**: Intelligent table detection and structured data parsing from images
• **Character Whitelisting**: Optimized OCR character recognition for better accuracy
• **Image Preprocessing**: Advanced image enhancement pipeline for superior OCR results

🚀 **Complete Document Intelligence Pipeline:**
• **Universal Document Support**: PDF, Word (.docx/.doc), Excel (.xlsx/.xls), Text, Images - ALL formats in one solution
• **Smart Chunking**: Word boundary validation with context preservation across all document types
• **Image-to-Text Integration**: Seamless OCR integration with RAG pipeline for image-based documents
• **Table Intelligence**: Excel worksheet parsing + OCR table extraction for comprehensive data processing
• **Language-Agnostic Design**: Works with any language without hardcoded patterns (English, Turkish, Chinese, etc.)

🤖 **Universal AI Provider Ecosystem:**
• **5 Dedicated Providers**: OpenAI, Anthropic Claude, Google Gemini, Azure OpenAI, Custom endpoints
• **VoyageAI Integration**: High-quality embeddings optimized for Anthropic Claude models
• **CustomProvider**: Support for any AI API endpoint with flexible configuration
• **Provider-Agnostic**: Switch between AI providers without code changes

🏢 **Enterprise Storage Solutions:**
• **Vector Databases**: Qdrant with advanced distance metrics and collection management
• **Redis**: High-performance in-memory storage with persistence
• **SQLite**: Lightweight file-based storage for small to medium deployments
• **FileSystem**: Simple file-based storage for development and testing
• **InMemory**: Fast ephemeral storage for temporary use cases

💬 **Intelligent Conversation Management:**
• **Smart Query Intent Detection**: Automatically distinguishes between general chat and document search queries
• **Automatic Session-Based History**: Persistent conversation context across requests
• **Cross-Request Persistence**: Conversation history survives multiple API calls
• **Privacy-First**: Each session is isolated with no cross-contamination

⚡ **Production-Ready Enterprise Features:**
• **.NET Standard 2.0/2.1**: Maximum framework compatibility (.NET Framework 4.6.1+, .NET Core 2.0+, .NET 5+)
• **Zero Warnings Policy**: 100% compliance with enterprise code quality standards
• **SOLID & DRY Principles**: Enterprise-grade architecture and maintainability
• **Thread-Safe Operations**: Concurrent request handling with proper synchronization
• **Comprehensive Logging**: Structured logging with LoggerMessage delegates
• **Dependency Injection**: Full DI container integration with plug-and-play setup

🎯 **Revolutionary Use Cases Now Possible:**
• Upload scanned documents, receipts, forms, and get instant intelligent answers
• Process image-based reports, charts, and tables with OCR + RAG intelligence
• Extract and query data from handwritten notes, printed documents, and screenshots
• Transform any image with text into searchable, queryable knowledge base</PackageReleaseNotes>
    
    <!-- Build Configuration -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    
    <!-- Assembly Information -->
    <AssemblyTitle>SmartRAG</AssemblyTitle>
    <AssemblyDescription>High-performance RAG library with conversation history management for .NET</AssemblyDescription>
    <AssemblyCopyright>Copyright © 2025 Barış Yerlikaya</AssemblyCopyright>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <FileVersion>2.2.0.0</FileVersion>
    <NeutralLanguage>en</NeutralLanguage>
    <Culture>en-US</Culture>
  </PropertyGroup>

  <!-- Package References -->
  <ItemGroup>
    <!-- Microsoft Extensions -->
    <PackageReference Include="Microsoft.Extensions.Configuration.Abstractions" Version="9.0.9" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="9.0.9" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.9" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="9.0.9" />
    
    <!-- HTTP Client -->
    <PackageReference Include="Microsoft.Extensions.Http" Version="9.0.9" />
    
    <!-- JSON Processing -->
    <PackageReference Include="System.Text.Json" Version="9.0.9" />
    
    <!-- Vector Database Support -->
    <PackageReference Include="Qdrant.Client" Version="1.15.1" />
    <PackageReference Include="StackExchange.Redis" Version="2.9.17" />
    <PackageReference Include="Microsoft.Data.Sqlite" Version="9.0.9" />
    
    <!-- Validation -->
    <PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
    <!-- Document Parsing -->
    <PackageReference Include="DocumentFormat.OpenXml" Version="3.3.0" />
    <PackageReference Include="itext" Version="9.3.0" />
    <PackageReference Include="EPPlus" Version="8.1.1" />
    
    <!-- OCR and Image Processing -->
    <PackageReference Include="Tesseract" Version="5.2.0" />
    <PackageReference Include="SkiaSharp" Version="3.119.0" />
  </ItemGroup>

  <!-- Conditional Package References for .NET Standard 2.1 -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.1'">
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" />
  </ItemGroup>

  <!-- Conditional Package References for .NET Standard 2.0 -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.6.3" />
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="9.0.9" />
  </ItemGroup>

  <!-- Documentation Files -->
  <ItemGroup>
    <None Include="README.md" Pack="true" PackagePath="/" />
    <!-- <None Include="icon.png" Pack="true" PackagePath="/" /> -->
  </ItemGroup>

  <!-- Tessdata Files -->
  <ItemGroup>
    <Content Include="tessdata\eng.traineddata">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

</Project>
